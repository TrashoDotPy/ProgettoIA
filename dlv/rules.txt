#show tile/4.

rotation(0..3).

% guess rotation
tile(T,0,X,Y)|tile(T,1,X,Y)|tile(T,2,X,Y)|tile(T,3,X,Y) :- figure(T,_,X,Y).


% total number of figures
num_tiles(N):- dim(D), N = D*D.

% limit the number of tiles to N
:-c(Z), num_tiles(N), Z<>N.
c(Z):- #count{Rot,X,Y: tile(_,Rot,X,Y)}=Z.

%--------------------------constrains-----------------------------------------
:-tile(_,Rot,X,Y), tile(_,Rot1,X,Y), Rot <> Rot1.

% Determines if two tiles are connected
connected(X,Y,X2,Y2):-tile(0,_ ,X,Y), X2 = X-1, Y2 = Y, conn(X,Y, "up"), tile(_,_,X2,Y2).
connected(X,Y,X2,Y2):-tile(0,_ ,X,Y), X2 = X+1, Y2 = Y, conn(X,Y, "down"), tile(_,_,X2,Y2).
connected(X,Y,X2,Y2):-tile(0,_ ,X,Y), Y2 = Y-1, X2 = X, conn(X,Y, "left"), tile(_,_,X2,Y2).
connected(X,Y,X2,Y2):-tile(0,_ ,X,Y), Y2 = Y+1, X2 = X, conn(X,Y, "right"), tile(_,_,X2,Y2).


connected(X,Y,X2,Y2):-connected(_,_,X,Y), X2 = X-1, Y2 = Y, conn(X,Y, "up"), tile(_,_,X2,Y2), not connected(X2,Y2,X,Y).
connected(X,Y,X2,Y2):-connected(_,_,X,Y), X2 = X+1, Y2 = Y, conn(X,Y, "down"), tile(_,_,X2,Y2), not connected(X2,Y2,X,Y).
connected(X,Y,X2,Y2):-connected(_,_,X,Y), Y2 = Y-1, X2 = X, conn(X,Y, "left"), tile(_,_,X2,Y2), not connected(X2,Y2,X,Y).
connected(X,Y,X2,Y2):-connected(_,_,X,Y), Y2 = Y+1, X2 = X, conn(X,Y, "right"), tile(_,_,X2,Y2), not connected(X2,Y2,X,Y).

% count of lamps
lamps(N):- #count{T,X,Y: tile(T,_,X,Y), T = 4} = N.

% count of connected lamps
lampsConnected(N):- #count{T,X,Y: tile(T,_,X,Y), T = 4, connected(_,_,X,Y)} = N.

:- lamps(N), lampsConnected(N1), N1<>N.

% constrains per type of component
% 0.PNG -> Battery
% 1.PNG -> Linear wire
% 2.PNG -> L wire
% 3.PNG -> TriDir wire
% 4.PNG -> Lamp


% 0.png UP
conn(X,Y,Dir):-tile(0,0,X,Y), Dir="up".
conn(X,Y,Dir):-tile(0,0,X,Y), Dir="left".
conn(X,Y,Dir):-tile(0,0,X,Y), Dir="right".

% 0.png RIGHT
conn(X,Y,Dir):-tile(0,1,X,Y), Dir="up".
conn(X,Y,Dir):-tile(0,1,X,Y), Dir="down".
conn(X,Y,Dir):-tile(0,1,X,Y), Dir="right".

% 0.png DOWN
conn(X,Y,Dir):-tile(0,2,X,Y), Dir="right".
conn(X,Y,Dir):-tile(0,2,X,Y), Dir="down".
conn(X,Y,Dir):-tile(0,2,X,Y), Dir="left".

% 0.png LEFT
conn(X,Y,Dir):-tile(0,3,X,Y), Dir="up".
conn(X,Y,Dir):-tile(0,3,X,Y), Dir="down".
conn(X,Y,Dir):-tile(0,3,X,Y), Dir="left".

% 1.png VERTICAL
conn(X,Y,Dir):-tile(1,0,X,Y), Dir="up".
conn(X,Y,Dir):-tile(1,0,X,Y), Dir="down".

% 1.png ORIZONTAL
conn(X,Y,Dir):-tile(1,1,X,Y), Dir="left".
conn(X,Y,Dir):-tile(1,1,X,Y), Dir="right".

% 2.png UP-LEFT
conn(X,Y,Dir):-tile(2,0,X,Y), Dir="up".
conn(X,Y,Dir):-tile(2,0,X,Y), Dir="left".

% 2.png UP-RIGHT
conn(X,Y,Dir):-tile(2,1,X,Y), Dir="up".
conn(X,Y,Dir):-tile(2,1,X,Y), Dir="right".

% 2.png DOWN-RIGHT
conn(X,Y,Dir):-tile(2,2,X,Y), Dir="right".
conn(X,Y,Dir):-tile(2,2,X,Y), Dir="down".

% 2.png DOWN-LEFT
conn(X,Y,Dir):-tile(2,3,X,Y), Dir="down".
conn(X,Y,Dir):-tile(2,3,X,Y), Dir="left".

% 3.png UP
conn(X,Y,Dir):-tile(3,0,X,Y), Dir="up".
conn(X,Y,Dir):-tile(3,0,X,Y), Dir="left".
conn(X,Y,Dir):-tile(3,0,X,Y), Dir="right".

% 3.png RIGHT
conn(X,Y,Dir):-tile(3,1,X,Y), Dir="up".
conn(X,Y,Dir):-tile(3,1,X,Y), Dir="down".
conn(X,Y,Dir):-tile(3,1,X,Y), Dir="right".

% 3.png DOWN
conn(X,Y,Dir):-tile(3,2,X,Y), Dir="right".
conn(X,Y,Dir):-tile(3,2,X,Y), Dir="down".
conn(X,Y,Dir):-tile(3,2,X,Y), Dir="left".

% 3.png LEFT
conn(X,Y,Dir):-tile(3,3,X,Y), Dir="up".
conn(X,Y,Dir):-tile(3,3,X,Y), Dir="down".
conn(X,Y,Dir):-tile(3,3,X,Y), Dir="left".

% 4.png UP
conn(X,Y,Dir):-tile(4,0,X,Y), Dir="up".

% 4.png RIGHT
conn(X,Y,Dir):-tile(4,1,X,Y), Dir="right".

% 4.png DOWN
conn(X,Y,Dir):-tile(4,2,X,Y), Dir="down".

% 4.png LEFT
conn(X,Y,Dir):-tile(4,3,X,Y), Dir="left".

:-conn(X,0,"left").
:-conn(X,Y,"right"), dim(D), Y = D-1.
:-conn(0,Y,"up").
:-conn(X,Y,"down"), dim(D), X = D-1.

:- conn(X,Y,"left"), not conn(X,Y-1,"right").
:- conn(X,Y,"right"), not conn(X,Y+1,"left").
:- conn(X,Y,"up"), not conn(X-1,Y,"down").
:- conn(X,Y,"down"), not conn(X+1,Y,"up").


:- tile(4,1,X,Y), tile(4,3,X,Y+1).
:- tile(4,3,X,Y), tile(4,1,X,Y-1).
:- tile(4,2,X,Y), tile(4,0,X+1,Y).
:- tile(4,0,X,Y), tile(4,2,X-1,Y).